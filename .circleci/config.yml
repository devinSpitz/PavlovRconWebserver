# Use the latest 2.1 version of CircleCI pipeline process engine.
# See: https://circleci.com/docs/2.0/configuration-reference
version: 2.1

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  pull_request:
    types: [closed]
# Define a job to be invoked later in a workflow.
# See: https://circleci.com/docs/2.0/configuration-reference/#jobs
jobs:
  # Below is the definition of your job to build and test your app, you can rename and customize it as you want.
  test:
    # Specify the execution environment. You can specify an image from Dockerhub or use one of our Convenience Images from CircleCI's Developer Hub.
    # See: https://circleci.com/docs/2.0/configuration-reference/#docker-machine-macos-windows-executor
    # Be sure to update the tag on this image to a more stable version, using latest can result in unstable builds.
    docker:
      - image: mcr.microsoft.com/dotnet/sdk:5.0
    # Add steps to the job
    # See: https://circleci.com/docs/2.0/configuration-reference/#steps
    steps:
      # Checkout the code as the first step.
      - checkout
      # Then simply use the dotnet container as you'd expect and run your tests
      - run:
          # Update this line with the directory that contains your tests project file
          working_directory:  ~/project/PavlovRconWebserverTests
          name: Run tests
          command: |
            dotnet test PavlovRconWebserverTests.csproj
  BuildWindows:
    docker:
      - image: mcr.microsoft.com/dotnet/sdk:5.0
    steps:      
      - checkout
      - run:
          working_directory: ~/project/PavlovRconWebserverTests
          name: Run Build Windows
          command: |
            dotnet publish -c release --runtime win-x64 --self-contained true --framework net5.0

  BuildLinux:
    docker:
      - image: mcr.microsoft.com/dotnet/sdk:5.0
    steps:
      - checkout
      - run:
          working_directory: ~/project/PavlovRconWebserverTests
          name: Run Build Linux
          command: |
            dotnet publish -c release --runtime linux-x64 --self-contained true --framework net5.0
# Invoke jobs via workflows
# See: https://circleci.com/docs/2.0/configuration-reference/#workflows
workflows:
  TestBuildRelease: # This is the name of the workflow, feel free to change it to better match your workflow.
    # Inside the workflow, you define the jobs you want to run.
    jobs:
      - test
      - BuildWindows:
          requires:
            - test
      - BuildLinux:
          requires:
            - test
