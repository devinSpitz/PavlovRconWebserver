@model PavlovServerViewModel

@{
    ViewBag.Title = "Add/Update pavlov server";
    Layout = "_Layout";
    var placeholder = "";
    if (Model.Id > 0)
    {
        placeholder = "Leave blank if you don't want to update it";
    }
    var keyFiles = Model.SshKeyFileNames.Prepend("");

}

<h2>@ViewBag.Title</h2>
<div class="card bg-info">
    <ul>
        <li>Each field is a mandatory field</li>
        <li>The Pavlov server and the service must already exist (but the service can be disabled).</li>
        <li>When saving, a validation is performed at the same time. This means that the pavlov server is also started for a short time if it is not yet running.</li>
    </ul>
</div>


<form asp-controller="PavlovServer" asp-action="SaveServer" method="post">
    <div asp-validation-summary="All" class="text-danger"></div>

    <input asp-for="Id" class="form-control" value="@Model.Id" type="hidden"/>
    @if (Model.create)
    {
        <input asp-for="create" class="form-control form-check-input" value="@Model.create" type="hidden"/>
    }
    <input asp-for="Id" class="form-control " value="@Model.Id" type="hidden"/>
    <span asp-validation-for="Id" class="text-danger"></span>
    <input asp-for="sshServerId" class="form-control" value="@Model.sshServerId" type="hidden"/>
    <span asp-validation-for="sshServerId" class="text-danger"></span>
    <div class="row">
        <div class="form-group col-md-12">
            <label asp-for="Name"></label>
            <input asp-for="Name" class="form-control" value="@Model.Name"/>
            <span asp-validation-for="Name" class="text-danger"></span>
        </div>
    </div>
    <div class="row">
        <div class="form-group  col-md-2">
            <label asp-for="TelnetPort"></label>
            <input asp-for="TelnetPort" class="form-control" value="@Model.TelnetPort"/>
            <span asp-validation-for="TelnetPort" class="text-danger"></span>
        </div>
        <div class="form-group  col-md-7">
            <label asp-for="TelnetPassword"></label>
            <input asp-for="TelnetPassword" class="form-control" placeholder="@placeholder" type="password" value="" autocomplete="off"/>
            <p class="form-text">
                @ViewData.ModelMetadata.Properties.Where(m => m.PropertyName == "TelnetPassword").FirstOrDefault().Description
            </p>
            <span asp-validation-for="TelnetPassword" class="text-danger"></span>
        </div>

        <div class="form-group col-md-3">
            <label asp-for="ServerType"></label>
            <select asp-for="ServerType" asp-items="Html.GetEnumSelectList<ServerType>()" class="form-control form-control-sm"></select>
            <span asp-validation-for="ServerType" class="text-danger"></span>
        </div>
    </div>
    <div class="row">
        <div class="form-group col-md-6">
            <label asp-for="ServerPort"></label>
            <input asp-for="ServerPort" class="form-control" value="@Model.ServerPort"/>
            <span asp-validation-for="ServerPort" class="text-danger"></span>
        </div>
        <div class="form-group col-md-6">
            <label asp-for="ServerFolderPath"></label>
            <input asp-for="ServerFolderPath" class="form-control" value="@Model.ServerFolderPath"/>
            <span asp-validation-for="ServerFolderPath" class="text-danger"></span>
        </div>
    </div>

    <div class="row">
        <div class="form-group col-sm-3">
            <label asp-for="DeletAfter"></label>
            <input asp-for="DeletAfter" class="form-control" value="@Model.DeletAfter"/>
            <span asp-validation-for="DeletAfter" class="text-danger"></span>
        </div>
        <div class="form-group col-sm-3">
            <label asp-for="ServerSystemdServiceName"></label>
            <input asp-for="ServerSystemdServiceName" class="form-control" value="@Model.ServerSystemdServiceName"/>
            <span asp-validation-for="ServerSystemdServiceName" class="text-danger"></span>
        </div>
    </div>

    @if (Model.create)
    {
        <div class="col-md-11">
            <div class="card m-1 ">
                <div class="card-header">Root user</div>
                <div class="card-body">
                    <div class="card m-1 bg-info">
                        <ul>
                            <li>This user will not get saved and only be used to make the service for the pavlovserver.</li>
                            <li>This user is needed to make the service.</li>
                            <li>The service has to be stopped!</li>
                            <li class="bg-warning">After a save has failed while creating a server you may have to disable and stop the service depends on what is already done!</li>
                        </ul>
                    </div>
                    <div class="row">
                        <div class="form-group col-sm-3">
                            <label asp-for="SshUsernameRoot"></label>
                            <input asp-for="SshUsernameRoot" class="form-control" value="@Model.SshUsernameRoot"/>
                            <span asp-validation-for="SshUsernameRoot" class="text-danger"></span>
                        </div>
                        <div class="form-group col-md-6">
                            <label asp-for="SshPasswordRoot"></label>
                            <input asp-for="SshPasswordRoot" type="password" autocomplete="off" class="form-control" value="@Model.SshPasswordRoot"/>
                            <span asp-validation-for="SshPasswordRoot" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group col-md-6">
                            <label asp-for="SshKeyFileNameRoot"></label>
                            @Html.DropDownListFor(m => m.SshKeyFileNameRoot, new SelectList(keyFiles, "", "", Model.SshKeyFileNameRoot), new {@class = "form-control form-select form-control-sm"})
                            <span asp-validation-for="SshKeyFileNameRoot" class="text-danger"></span>
                        </div>
                        <div class="form-group col-md-6">
                            <label asp-for="SshPassphraseRoot"></label>
                            <input asp-for="SshPassphraseRoot" class="form-control" value="@Model.SshPassphraseRoot"/>
                            <span asp-validation-for="ServerPort" class="text-danger"></span>
                        </div>
                    </div>

                    @* Gets auto populatet *@
                </div>
            </div>
        </div>
    }

    <div class="row">
        <div class="saveButton col-md-1 mt-3">
            <button type="submit" class="btn btn-success col-md-12">Save</button>
        </div>
    </div>


</form>