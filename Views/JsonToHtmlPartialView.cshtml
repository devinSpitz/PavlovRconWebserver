@using Newtonsoft.Json
@using Newtonsoft.Json.Linq
@model string
@{
    
    var isMultiLevel = false; 
    var isSingleLevel = false;
    try
    {
        var converted = JsonConvert.DeserializeObject(Model);
        if (converted is JObject)
        {
            isMultiLevel = true;
        }
        else if (converted is JArray)
        {
            isSingleLevel = true;
        }
    }
    catch (Exception e)
    {
        //ignore
    }
}
<!-- Modal -->
<div class="modal fade" id="add-contact" tabindex="-1" role="dialog" aria-labelledby="addContactLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addContactLabel">Result:</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">Ã—</span>
                </button>
            </div>
            <div class="modal-body">
            @if (isMultiLevel)
            {
                await Html.RenderPartialAsync("JsonToHtmlMultilevelPartialView.cshtml", Model);
            }
            else if (isSingleLevel) //might not be multiLevel nor singleLevel (if no data)
            {
                await Html.RenderPartialAsync("JsonToHtmlSinglelevelPartialView.cshtml", Model);
            }
            else
            {
                <div class="bg-danger">@Model?.Replace("\"","")</div>
            }
            <button type="button" class="btn btn-danger" data-dismiss="modal">Cancel</button>
            </div>
        </div>
    </div>
</div>