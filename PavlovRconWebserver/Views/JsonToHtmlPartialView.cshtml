@using Newtonsoft.Json
@using Newtonsoft.Json.Linq
@model string
@{
    var isMultiLevel = false;
    var isSingleLevel = false;
    var isKick = false;
    object? converted = null;
    var kick = new KickViewModel();
    //Realy realy bad way to do it :(
    try
    {
        try
        {
            converted = JsonConvert.DeserializeObject(Model);
        }
        catch
        {
            //Ignore
        }
        kick = JsonConvert.DeserializeObject<KickViewModel>(Model, new JsonSerializerSettings {CheckAdditionalContent = false});
        if (kick.UniqueID != "" && kick.UniqueID != null)
        {
            isKick = true;
        }
    }
    catch
    {
        // ignored
    }
    if (converted != null && converted is JObject)
    {
        isMultiLevel = true;
    }
    else if (converted != null && converted is JArray)
    {
        isSingleLevel = true;
    }
}
<!-- Modal -->
<div class="modal" id="add-contact" tabindex="-1" role="dialog" aria-labelledby="addContactLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="addContactLabel">Result:</h5>
                <button type="button" class="close btn btn-danger" data-bs-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">Ã—</span>
                </button>
            </div>
            <div class="modal-body">
                @if (isMultiLevel)
                {
                    await Html.RenderPartialAsync("JsonToHtmlMultilevelPartialView.cshtml", Model);
                }
                else if (isSingleLevel) //might not be multiLevel nor singleLevel (if no data)
                {
                    await Html.RenderPartialAsync("JsonToHtmlSinglelevelPartialView.cshtml", Model);
                }
                else if (isKick)
                {
                    await Html.RenderPartialAsync("JsonToHtmlMultilevelPartialView.cshtml", JsonConvert.SerializeObject(kick));
                }
                else
                {
                    <div class="bg-danger">@Model?.Replace("\"", "")</div>
                }
                <button type="button" class="btn btn-danger" data-bs-dismiss="modal">Cancel</button>
            </div>
        </div>
    </div>
</div>