@using PavlovRconWebserver.Services
@using LiteDB.Identity.Models
@using Microsoft.AspNetCore.Identity
@model IEnumerable<SshServer>
@inject UserService _userService;
@inject UserManager<LiteDbUser> _userManager;
@inject ServerSelectedModsService _serverSelectedModsService;
@inject PavlovServerService _pavlovServerService;
@{
    var ids = new List<string>();
    ViewBag.Title = "Rcon Servers";
    Layout = "_Layout";


    var user = await _userManager.GetUserAsync(User);
    _userService.UserInRole(user, _serverSelectedModsService, _pavlovServerService, out var isAdmin, out _, out _, out var isOnPremise, out _, out _, out _);
}


<h2>
    Rcon servers
    <a class="btn btn-sm btn-primary" asp-area="" asp-controller="SshServer" asp-action="EditServer">
        <span class="fas fa-plus"></span>
    </a>
</h2>

    @foreach (var sshServer in Model)
    {
        <div class="card col-xs-12 col-sm-12 col-md-12 col-lg-12 col-xl-12 col-xxl-12">
        <div class="card-header  text-nowrap  row">
            <div class="col-xs-3 col-sm-3 col-md-3 col-lg-3 col-xl-3 col-xxl-3">
                <b>Name:</b> @sshServer.Name
            </div>
            <div class="col-xs-3 col-sm-3 col-md-3 col-lg-3 col-xl-3 col-xxl-3">
                <b>Adress:</b> @sshServer.Adress
            </div>
            <div class="col-xs-3 col-sm-3 col-md-3 col-lg-3 col-xl-3 col-xxl-3">
                <b>Remove:</b> 
                @if (isOnPremise || isAdmin)
                {
                    <a class="btn btn-sm btn-danger" href="@Url.Action("DeleteServer", new { sshServer.Id })" onclick="return confirm('Are you sure you want to Delete?\nYou will also delete all pavlov servers!')">
                        <span class="fas fa-trash-alt"></span>
                    </a>
                }
            </div>
            <div class="col-xs-3 col-sm-3 col-md-3 col-lg-3 col-xl-3 col-xxl-3">
                <b>Edit:</b>
                @if (isOnPremise || isAdmin)
                {
                    <a class="btn btn-sm btn-primary"href="@Url.Action("EditServer", "SshServer", new { serverId = sshServer.Id })">
                        <span class="fas fa-edit"></span>
                    </a>
                }
            </div>

        </div>
        @if (sshServer.PavlovServers != null)
        {
            var id = "Datatables"+sshServer.Id;
            ids.Add(id);
            <table id="@id" class="table  text-nowrap  table-sm table-bordered table-responsive col-xs-12 col-sm-12 col-md-12 col-lg-12 col-xl-12 col-xxl-12">
                <caption style="caption-side:top">Pavlov Servers for: @sshServer.Name</caption>
                <thead>
                <tr>
                    <th>Gui Name</th>
                    <th>Service state</th>
                    @if (isOnPremise || isAdmin)
                    {
                        <th >Delete<br>from list</th>
                        <th >Delete<br>incl. files</th>
                        <th >System</th>
                        <th >Reset Stats</th>
                    }
                    <th >Maps</th>
                    <th >ServerSettings</th>
                    <th >Stop/Start</th>
                    <th >logs</th>
                    <th >Stats</th>
                    <th >Import Bans</th>
                    <th >Steam</th>
                </tr>
                </thead>
                <tbody>
                @foreach (var pavlovServer in sshServer.PavlovServers)
                {
                    var bg = "";
                    @if (pavlovServer.ServerServiceState == ServerServiceState.active)
                    {
                        bg = "text-success";
                    }
                    else if (pavlovServer.ServerServiceState == ServerServiceState.disabled)
                    {
                        bg = "text-danger";
                    }
                    else if (pavlovServer.ServerServiceState == ServerServiceState.inactive)
                    {
                        bg = "text-warning";
                    }
                    else if (pavlovServer.ServerServiceState == ServerServiceState.none)
                    {
                        bg = "text-light";
                    }
                    <tr>
                        <td> @pavlovServer.Name </td>

                        <td class="@bg"> @pavlovServer.ServerServiceState </td>
                        @if (isOnPremise || isAdmin)
                        {
                            <td >
                                <a class="btn btn-sm btn-danger" alt="Remove from list" href="@Url.Action("DeleteServer", "PavlovServer", new {pavlovServer.Id})" onclick="return confirm('Are you sure you want to remove the server from list?')">
                                    <span class="fas fa-trash-alt"></span>
                                </a>
                            </td>
                            <td >
                                @if (sshServer.SteamIsAvailable)
                                {
                                    <a class="btn btn-sm btn-danger" alt="Complete Remove" href="@Url.Action("CompleteRemoveView", "PavlovServer", new {pavlovServer.Id})" onclick="return confirm('Are you sure you want to Delete the hole Pavlov Server inlc. files?')">
                                        <span class="fas fa-trash-alt"></span>
                                    </a>
                                }
                            </td>
                            <td >
                                <a class="btn btn-sm btn-primary" href="@Url.Action("EditServer", "PavlovServer", new {serverId = pavlovServer.Id, sshServerId = sshServer.Id})">
                                    <span class="fas fa-edit"></span>
                                </a>
                            </td>
                            <td >
                                <a class="btn btn-sm btn-danger" alt="Delete stats" href="@Url.Action("DeleteServerStats", "PavlovServer", new {id = pavlovServer.Id})" onclick="return confirm('Are you sure you want to Delete the hole stats of the Pavlov Server?')">
                                    <span class="fas fa-trash-alt"></span>
                                </a>
                            </td>
                        }

                        <td >
                            <a class="btn btn-sm btn-primary" href="@Url.Action("EditServerSelectedMaps", "PavlovServer", new {serverId = pavlovServer.Id})">
                                <span class="fas fa-map"></span>
                            </a>
                        </td>
                        <td >
                            <a class="btn btn-sm btn-primary" href="@Url.Action("EditServerSettings", "PavlovServer", new {serverId = pavlovServer.Id})">
                                <span class="fas fa-cogs"></span>
                            </a>
                            <a class="btn btn-sm btn-primary" href="@Url.Action("EditWhiteList", "PavlovServer", new {serverId = pavlovServer.Id})">
                                <span>WhiteList</span>
                            </a>
                            <a class="btn btn-sm btn-primary" href="@Url.Action("EditModList", "PavlovServer", new {serverId = pavlovServer.Id})">
                                <span>Mods</span>
                            </a>
                        </td>
                        <td >
                            <a class="btn btn-sm btn-danger" href="@Url.Action("StopSystemdService", "PavlovServer", new {serverId = pavlovServer.Id})" onclick="return confirm('Are you sure you want to stop the server?')">
                                <span class="fas fa-stop"></span>
                            </a>
                            <a class="btn btn-sm btn-primary" href="@Url.Action("StartSystemdService", "PavlovServer", new {serverId = pavlovServer.Id})">
                                <span class="fas fa-play"></span>
                            </a>
                        </td>
                        
                        <td >
                            <a class="btn btn-sm btn-primary" href="@Url.Action("GetServerLog", "PavlovServer", new {serverId = pavlovServer.Id})"><span class="fas fa-eye"></span> Logs</a>
                        </td>
                        
                        <td >
                            <a class="btn btn-sm btn-primary" href="@Url.Action("PlayersFromServers", "PublicViewLists", new {servers = new int[1] {pavlovServer.Id}, backgroundColorHex = "#222", fontColorHex = "#ffffff"})"><span class="fas fa-eye"></span> Stats</a>
                            <a class="btn btn-sm btn-primary" href="@Url.Action("PlayersFromServersAsImage", "PublicViewLists", new {servers = new int[1] {pavlovServer.Id}, backgroundColorHex = "#222", fontColorHex = "#ffffff"})"><span class="fas fa-eye"></span> Stats Image</a>
                            <a class="btn btn-sm btn-primary" href="@Url.Action("GetHistoryOfServer", "PublicViewLists", new {serverId = pavlovServer.Id})"><span class="fas fa-eye"></span> History</a>
                            <a class="btn btn-sm btn-primary" href="@Url.Action("GetAdminCommandsLogsHistoryOf", "PublicViewLists", new {serverId = pavlovServer.Id})"><span class="fas fa-eye"></span> GetAdminCommandsHistory</a>
                            <a class="btn btn-sm btn-primary" href="@Url.Action("RemoveAdminCommandsLogsHistoryOf", "PublicViewLists", new {serverId = pavlovServer.Id})"><span class="fas fa-eye"></span> RemoveAdminCommandsHistory</a>
                        </td>                        
                        <td >
                            <a class="btn btn-sm btn-primary" href="@Url.Action("ImportBansView", "PavlovServer", new {id = pavlovServer.Id})"><span class="fas fa-file-import"></span> Import Bans</a>
   </td>
                        <td >
                        @if (sshServer.SteamIsAvailable)
                        {
                            <a class="btn btn-sm btn-success" href="@Url.Action("UpdatePavlovServer", "PavlovServer", new {serverId = pavlovServer.Id})" onclick="return confirm('Are you sure you want to Update?')">
                                Update <span class="fas fa-arrow-circle-up"></span>
                            </a>
                        }
                    </tr>

                }
                </tbody>
            </table>
            <div class="row">
                
                            <div class="col-sm-1 col-md-1 col-lg-1 col-xl-1 col-xxl-1"></div>
                @if (isOnPremise || isAdmin)
                {
                    <a class="btn btn-sm btn-primary col-sm-1 col-md-1 col-lg-1 col-xl-1 col-xxl-1" href="@Url.Action("EditServer", "PavlovServer", new { serverId = 0, sshServerId = sshServer.Id })">
                        <span class="fas fa-plus"></span>
                    </a>
                    <div class="col-xs-1 col-sm-1 col-md-1 col-lg-1 col-xl-1 col-xxl-1"></div>
                    @if (sshServer.SteamIsAvailable)
                    {
                        <a class="btn btn-sm btn-primary col-sm-1 col-md-1 col-lg-1 col-xl-1 col-xxl-1" href="@Url.Action("EditServer", "PavlovServer", new { serverId = 0, sshServerId = sshServer.Id, create = true })">
                            Create Pavlov Server
                        </a>

                        <div class="col-xs-1 col-sm-1 col-md-1 col-lg-1 col-xl-1 col-xxl-1"></div>
                    }
                }
                <a class="btn btn-sm btn-primary col-xs-1 col-sm-1 col-md-1 col-lg-1 col-xl-1 col-xxl-1" href="@Url.Action("PlayersFromServers", "PublicViewLists", new { servers = sshServer.PavlovServers?.Select(x => x.Id).ToArray(), backgroundColorHex = "#222", fontColorHex = "#ffffff" })"><span class="fas fa-eye"></span> All Stats</a>
                
                <div class="col-xs-1 col-sm-1 col-md-1 col-lg-1 col-xl-1 col-xxl-1"></div>
                <a class="btn btn-sm btn-primary col-xs-1 col-sm-1 col-md-1 col-lg-1 col-xl-1 col-xxl-1" href="@Url.Action("PlayersFromServersAsImage", "PublicViewLists", new { servers = sshServer.PavlovServers?.Select(x => x.Id).ToArray(), backgroundColorHex = "#222", fontColorHex = "#ffffff" })"><span class="fas fa-eye"></span> All Stats Image</a>
            </div>
        }
        </div>
    }
<script>

    function init(){
    let ids = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(ids) + "");
    $.each(ids,function()
    {
        let table = $("#"+this);
             if(table.exists())
                 {
                  table.DataTable({
                      responsive: true,
                      "autoWidth": false,
                      filter: false, 
                      "paging":   false,
                       "bInfo": false,
                       "ordering": false
                      });   
                  }
         
    });
    }
    
    
</script>
