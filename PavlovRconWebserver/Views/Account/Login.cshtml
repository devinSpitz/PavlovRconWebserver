@using LiteDB.Identity.Models
@using Microsoft.AspNetCore.Identity
@model PavlovRconWebserver.Models.AccountViewModels.LoginViewModel
@inject SignInManager<LiteDbUser> SignInManager

@{
    ViewData["Title"] = "Log in";
}

<h2>@ViewData["Title"]</h2>
<div class="row">
    <div class="col-md-4">
        <section>
            <form asp-route-returnurl="@ViewData["ReturnUrl"]" method="post">
                <h4>Use a local account to log in.</h4>
                <hr/>
                <div asp-validation-summary="All" class="text-danger"></div>
                <div class="form-group">
                    <label asp-for="Username"></label>
                    <input asp-for="Username" class="form-control"/>
                    <span asp-validation-for="Username" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <label asp-for="Password"></label>
                    <input asp-for="Password" class="form-control"/>
                    <span asp-validation-for="Password" class="text-danger"></span>
                </div>
                <div class="form-group">
                    <div class="checkbox">
                        <label asp-for="RememberMe">
                            <input asp-for="RememberMe"/>
                            @Html.DisplayNameFor(m => m.RememberMe)
                        </label>
                    </div>
                </div>
                <div class="form-group">
                    <button type="submit" class="btn btn-success">Log in</button>
                </div>
                <div class="form-group">

                </div>
            </form>
        </section>
    </div>
    
    <div class="col-md-6 col-md-offset-2">
        <section>
            <h3>Use another service to log in.</h3>
            <hr/>
            @{
                if ((Model.ExternalLogins?.Count ?? 0) == 0)
                {
                    <div>
                        <p>
                            No thirdparty logins available.
                        </p>
                    </div>
                }
                else
                {
                        <div>
                            <p>
                                @foreach (var provider in Model.ExternalLogins)
                                {
                                        <form asp-action="ExternalLogin" method="post" asp-route-provider="@provider.Name" asp-route-returnUrl="@ViewData["ReturnUrl"]" class="form-group">
                                            <button class="btn btn-primary" type="submit">@provider.DisplayName</button>
                                        </form>
                                }
                            </p>
                        </div>
                }
            }
        </section>
    </div>
</div>

@section Scripts {
    @await Html.PartialAsync("_ValidationScriptsPartial")
}