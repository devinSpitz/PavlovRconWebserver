@using LiteDB
@using LiteDB.Identity.Models
@model PavlovServerViewModel

@{
    if (Model.create)
    {
        ViewBag.Title = "Create pavlov server";
    }
    else if (Model.remove)
    {
        ViewBag.Title = "Complete remove pavlov server";
    }
    else
    {
        ViewBag.Title = "Add/Update pavlov server";
    }
    Layout = "_Layout";
    var placeholder = "";
    if (Model.Id > 0)
    {
        placeholder = "Leave blank if you don't want to update it";
    }
    var keyFiles = Model.SshKeyFileNames.Prepend("");

    var enctype = "";
    @if (Model.create || Model.remove)
    {
        enctype = @"multipart/form-data";
    }
    var action = "";
    
    var users = new List<LiteDbUser>();

    users = Model.LiteDbUsers;
    users = users.Prepend(new LiteDbUser
    {
        NormalizedUserName = "nothingSet",
        Id = new ObjectId()
    }).ToList();
}

<h2>@ViewBag.Title</h2>
@if (!Model.remove)
{
    <div class="card bg-info">
        <ul>
            <li>Each field is a mandatory field</li>
            @if (!Model.create)
            {
                <li>The Pavlov server and the service must already exist (but the service can be disabled).</li>
            }
            <li>When saving, a validation is performed at the same time. This means that the pavlov server is also started for a short time if it is not yet running.</li>
            @if (!Model.remove && !Model.create && Model.Id != 0)
            {
                <li class="bg-warning">You can not change the actual ports or the rcon password by editting the server. </li>
                <li class="bg-warning">To do that remove the complete server and recreate it again.</li>
                <li class="bg-warning">This is only to fine ajust if you changed the server settings manualy or made the hole pavlov server manualy!</li>
            }
            @if (!Model.create && Model.Id == 0)
            {
                <li class="bg-warning">This is only to add server which is made manualy!</li>
            }

        </ul>
    </div>
}
@if (Model.remove)
{
    action = "CompleteRemove";
}
else
{
    action = "SaveServer";
}

<form asp-controller="PavlovServer" asp-action="@action" method="post" enctype="@enctype">
    <div asp-validation-summary="All" class="text-danger"></div>

    <input asp-for="Id" class="form-control" value="@Model.Id" type="hidden"/>
    @if (Model.create)
    {
        <input asp-for="create" class="form-control form-check-input" value="@Model.create" type="hidden"/>
    }

    <input asp-for="Id" class="form-control " value="@Model.Id" type="hidden"/>

    <input asp-for="sshServerId" class="form-control" value="@Model.sshServerId" type="hidden"/>
    <span asp-validation-for="sshServerId" class="text-danger"></span>
    @if (Model.remove)
    {
        <div class="row">
            <input type="hidden" asp-for="Name" class="form-control" value="@Model.Name"/>
            <input type="hidden" asp-for="TelnetPort" class="form-control" value="@Model.TelnetPort"/>
            <input type="hidden" asp-for="TelnetPassword" class="form-control" placeholder="@placeholder" value="" autocomplete="off"/>
            <input type="hidden" asp-for="ServerType" class="form-control form-control-sm">
            <input type="hidden" asp-for="ServerPort" class="form-control" value="@Model.ServerPort"/>
            <input type="hidden" asp-for="ServerFolderPath" class="form-control" value="@Model.ServerFolderPath"/>
            <input type="hidden" asp-for="DeletAfter" class="form-control" value="@Model.DeletAfter"/>
            <input type="hidden" asp-for="ServerSystemdServiceName" class="form-control" value="@Model.ServerSystemdServiceName"/>
        </div>
    }
    else
    {
        <div class="row">
            <div class="form-group col-md-12">
                <label asp-for="Name"></label>
                <input asp-for="Name" class="form-control" value="@Model.Name"/>
                <span asp-validation-for="Name" class="text-danger"></span>
            </div>
        </div>
        <div class="row">
            <div class="form-group  col-md-2">
                <label asp-for="TelnetPort"></label>
                <input asp-for="TelnetPort" class="form-control" value="@Model.TelnetPort"/>
                <span asp-validation-for="TelnetPort" class="text-danger"></span>
            </div>
            <div class="form-group  col-md-7">
                <label asp-for="TelnetPassword"></label>
                <input asp-for="TelnetPassword" class="form-control" placeholder="@placeholder" type="password" value="" autocomplete="off"/>
                <p class="form-text">
                    @ViewData.ModelMetadata.Properties.Where(m => m.PropertyName == "TelnetPassword").FirstOrDefault().Description
                </p>
                <span asp-validation-for="TelnetPassword" class="text-danger"></span>
            </div>

            <div class="form-group col-md-3">
                <label asp-for="ServerType"></label>
                <select asp-for="ServerType" asp-items="Html.GetEnumSelectList<ServerType>()" class="form-control form-control-sm"></select>
                <span asp-validation-for="ServerType" class="text-danger"></span>
            </div>
        </div>
        <div class="row">
            <div class="form-group col-md-6">
                <label asp-for="ServerPort"></label>
                <input asp-for="ServerPort" class="form-control" value="@Model.ServerPort"/>
                <span asp-validation-for="ServerPort" class="text-danger"></span>
            </div>
            <div class="form-group col-md-6">
                <label asp-for="ServerFolderPath"></label>
                <input asp-for="ServerFolderPath" class="form-control" placeholder="/full/path/" value="@Model.ServerFolderPath"/>
                <span asp-validation-for="ServerFolderPath" class="text-danger"></span>
            </div>
        </div>

        <div class="row">
            <div class="form-group col-sm-3">
                <label asp-for="DeletAfter"></label>
                <input asp-for="DeletAfter" class="form-control" value="@Model.DeletAfter"/>
                <span asp-validation-for="DeletAfter" class="text-danger"></span>
            </div>
            <div class="form-group col-sm-3">
                <label asp-for="ServerSystemdServiceName"></label>
                <input asp-for="ServerSystemdServiceName" class="form-control" placeholder="Has to be unique" value="@Model.ServerSystemdServiceName"/>
                <span asp-validation-for="ServerSystemdServiceName" class="text-danger"></span>
            </div>
            <div class="form-group col-md-2">
                <label asp-for="AutoBalance"></label>
                <input asp-for="AutoBalance" class="form-control form-check-input" value="@Model.AutoBalance"/>
                <span asp-validation-for="AutoBalance" class="text-danger"></span>
            </div>
            <div class="form-group col-md-2">
                <label asp-for="SaveStats"></label>
                <input asp-for="SaveStats" class="form-control form-check-input" value="@Model.SaveStats"/>
                <span asp-validation-for="SaveStats" class="text-danger"></span>
            </div>
        </div>
    }


    @if (Model.create || Model.remove)
    {
        <div class="col-md-11">
            <div class="card m-1 ">
                <div class="card-header">Root user</div>
                <div class="card-body">
                    <div class="card m-1 bg-info">
                        <ul>
                            <li>
                                This user will not get saved and only be used to
                                @if (Model.create)
                                {
                                    <text>make</text>
                                }
                                @if (Model.remove)
                                {
                                    <text>remove</text>
                                }
                                the service for the pavlovserver.
                            </li>
                            @if (Model.create)
                            {
                                <li>This user is needed to make the service.</li>
                            }
                        </ul>
                    </div>
                    <div class="row">
                        <div class="form-group col-sm-3">
                            <label asp-for="SshUsernameRoot"></label>
                            <input asp-for="SshUsernameRoot" class="form-control" value="@Model.SshUsernameRoot"/>
                            <span asp-validation-for="SshUsernameRoot" class="text-danger"></span>
                        </div>
                        <div class="form-group col-md-6">
                            <label asp-for="SshPasswordRoot"></label>
                            <input asp-for="SshPasswordRoot" type="password" autocomplete="off" class="form-control" value="@Model.SshPasswordRoot"/>
                            <span asp-validation-for="SshPasswordRoot" class="text-danger"></span>
                        </div>
                    </div>
                    <div class="row">
                        <div class="form-group col-md-6">
                            <label asp-for="SshKeyFileNameForm"></label>
                            <input asp-for="SshKeyFileNameForm" class="form-control-file" />
                            <span asp-validation-for="SshKeyFileNameForm" class="text-danger"></span>
                        </div>
                        <div class="form-group col-md-6">
                            <label asp-for="SshPassphraseRoot"></label>
                            <input asp-for="SshPassphraseRoot" type="password" autocomplete="off" class="form-control" value="@Model.SshPassphraseRoot"/>
                            <span asp-validation-for="ServerPort" class="text-danger"></span>
                        </div>
                    </div>

                    @* Gets auto populatet *@
                </div>
            </div>
        </div>
    }
        <div class="card m-1">
            <div class="card-header">Rented by</div>
            <div class="card-body">
                <div class="row">
                    <div class="form-group col-md-12">
                        <label asp-for="LiteDbUserId"></label>
                        @Html.DropDownListFor(m => m.LiteDbUserId, new SelectList(users, "Id", "NormalizedUserName", Model.Owner?.Id), new {@class = "form-control form-control-sm form-select "})
                    </div>
                </div>

                
            </div>
        </div>
    <div class="row">
        <div class="saveButton col-md-1 mt-3">
            <button type="submit" class="btn btn-success col-md-12">
                @if (Model.create)
                {
                    <text>Create</text>
                }
                @if (Model.remove)
                {
                    <text>Remove</text>
                }
                @if (!Model.remove && !Model.create)
                {
                    <text>Save</text>
                }
            </button>
        </div>
    </div>


</form>